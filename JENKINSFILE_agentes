pipeline {
    	agent none
	options { skipDefaultCheckout() }

	stages {
		stage('Get Code') {
		    agent { label 'git' }
		    steps {
			bat 'whoami'
			bat 'hostname'
			echo WORKSPACE
			// Obtener c√≥digo del repo
			// checkout scm 
			git 'https://github.com/irenegcantera/unir-devops-caso1A.git'
			stash(name: 'app') 
		    }
		}
		
		stage('Build') {
		   agent any
		   steps {
			bat 'whoami'
			bat 'hostname'
			echo WORKSPACE
			echo 'Eyyy, esto es Python. No hay que compilar nada!!!'
			bat 'dir'
		   }
		}
		
		stage('Tests') {
			agent { label 'unit || rest || tests' }
			stages {
				stage('UnitTest') {
				    steps {
					bat 'whoami'
					bat 'hostname'
					echo 'ANTES DE HACER UNSTASH'
					bat 'dir'
					unstash 'app'
					echo 'DESPUES DE HACER UNSTASH'
					bat 'dir'
					catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
						bat '''
							set PYTHONPATH=%WORKSPACE%
							C:\\Users\\irene\\AppData\\Local\\Programs\\Python\\Python39\\Scripts\\pytest --junitxml=result-unit.xml test\\unit
						'''
					}
					stash(includes: 'result-unit.xml', name: 'result-unit') 
				    }
				}
			
				stage('RestTest') {
				    steps {
					
					bat 'whoami'
					bat 'hostname'
					echo WORKSPACE
					catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
					  bat '''
					      set FLASK_APP=app\\api.py
					      set FLASK_ENV=development
					      start flask run
					      start java -jar C:\\Users\\irene\\Desktop\\DEVOPS_AND_CLOUD\\CP_1\\helloworld\\test\\wiremock\\wiremock-standalone-3.3.1.jar --port 9090 --root-dir C:\\Users\\irene\\Desktop\\DEVOPS_AND_CLOUD\\CP_1\\helloworld\\test\\wiremock
					      set PYTHONPATH=%WORKSPACE%
					      C:\\Users\\irene\\AppData\\Local\\Programs\\Python\\Python39\\Scripts\\pytest --junitxml=result-rest.xml test\\rest
					  '''
					}
					stash(includes: 'result-rest.xml', name: 'result-rest') 
				   }
			        }
			}
		}

		stage('Results') {
		     agent any
		     steps {
			unstash 'result-unit'
			unstash 'result-rest'
			 junit 'result*.xml' 
		     }
		}
	}

	post { 
	        always { 
			node ('unit || rest || tests || git') {
		            echo 'Borrar WORKSPACE!'
			    cleanWs()
			}
		}
	}
}
