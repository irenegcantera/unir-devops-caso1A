pipeline {
    agent none
    
    stages {
        stage('Get Code') {
            agent { label 'principal' }
            steps {
                // Comandos
                bat 'whoami'
    			bat 'hostname'
    			echo WORKSPACE
    			// Vaciar directorio
                deleteDir()
                // Obtener cÃ³digo del repo
                git 'https://github.com/irenegcantera/unir-devops-caso1A.git'
                // Guardar app para el resto de agentes
                stash(name: 'app')
            }
        }

        stage('FunctionalTests') {
		    parallel {
            	// Tests unitarios
            	stage('UnitTest') {
            	    agent { label 'funcional' }
            		steps {
            		    // comandos
            		    bat 'whoami'
    				    bat 'hostname'
    				    echo WORKSPACE
    				    // Recuperar stash
    				    unstash 'app'
            			catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            			bat '''
            				set PYTHONPATH=%WORKSPACE%
            				coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest --junitxml=result-unit.xml test\\unit
            			'''
            			junit 'result-unit.xml'
            			}
            		}
            	}
            	
            	// Tests integracion
            	stage('RestTest') {
            	    agent { label 'funcional' }
            		steps {
            		    // comandos
            		    bat 'whoami'
    				    bat 'hostname'
    				    echo WORKSPACE
    				    // Recuperar stash
    				    unstash 'app'
            			catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            			bat '''
            				set FLASK_APP=app\\api.py
            				set FLASK_ENV=development
            				start flask run
            				start java -jar C:\\Users\\irene\\Desktop\\DEVOPS_AND_CLOUD\\CP_1_B\\unir-devops-caso1A\\test\\wiremock\\wiremock-standalone-3.3.1.jar --port 9090 --root-dir C:\\Users\\irene\\Desktop\\DEVOPS_AND_CLOUD\\CP_1_B\\unir-devops-caso1A\\test\\wiremock
            				set PYTHONPATH=%WORKSPACE%
            				C:\\Users\\irene\\AppData\\Local\\Programs\\Python\\Python39\\Scripts\\pytest --junitxml=result-rest.xml test\\rest
            			'''
            			junit 'result-rest.xml'
            			}    
            		}
            	}
            	
            	// Tests de cobertura de codigo (coverage)
                stage('CoverageTest') {
                	agent { label 'funcional' }
                    steps {
            		    // comandos
            		    bat 'whoami'
        			    bat 'hostname'
        			    echo WORKSPACE
            			catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            			bat '''
            				coverage xml
            			'''
				// x: maximo, y: minimo para ser inestable, z: minimo para ser exitoso 
                	    cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '100, 80, 90', lineCoverageTargets: '100, 85, 95', failUnstable: false, onlyStable: false
                    	}	
                    }
                }
		    }	
	    }
	    
	    

	     stage('NoFunctionalTests') {
		    parallel {
            	// Tests analisis de codigo estatico (flake8)
            	stage('StaticTest') {
            	    agent { label 'no-funcional' }
            		steps {
            		    // comandos
            		    bat 'whoami'
    				    bat 'hostname'
    				    echo WORKSPACE
    				    // Recuperar stash
    				    unstash 'app'
            			catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            			bat '''
            				flake8 --format=pylint --exit-zero %WORKSPACE%/app >flake8.out
            			'''
            			recordIssues qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true], [threshold: 10, type: 'TOTAL', unstable: false]], tools: [flake8(name: 'Flake8', pattern: 'flake8.out')]
            			}    
            		}
            	}
            	
            	// Tests seguridad analisis codigo estatico (bandit)
            	stage('SecurityTest') {
            	    agent { label 'no-funcional' }
            		steps {
            		    // comandos
            		    bat 'whoami'
    				    bat 'hostname'
    				    echo WORKSPACE
    				    // Recuperar stash
    				    unstash 'app'
            			catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            			bat '''
            				bandit --exit-zero -r %WORKSPACE% -f custom -o bandit.out --severity-level all --msg-template "{abspath}:{line}: [{severity},{test_id}]: {msg}"
            			'''
            			recordIssues qualityGates: [[threshold: 2, type: 'TOTAL', unstable: true], [threshold: 4, type: 'TOTAL', unstable: false]], tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')]
            			}  
            		}
            	}
            	
            	// Tests de carga (jmeter)
            	stage('PerformanceTest') {
            	    agent { label 'no-funcional' }
            		steps {
            		    // comandos
            		    bat 'whoami'
    				    bat 'hostname'
    				    echo WORKSPACE
    				    // Recuperar stash
    				    unstash 'app'
            			catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            			bat '''
            				C:\\Users\\irene\\Desktop\\DEVOPS_AND_CLOUD\\CP_1_B\\apache-jmeter-5.6.2\\apache-jmeter-5.6.2\\bin\\jmeter -n -t %WORKSPACE%\\test\\jmeter\\flask.jmx -l %WORKSPACE%\\test\\jmeter\\flask.jtl
            			'''
            			perfReport sourceDataFiles: '%WORKSPACE%\\test\\jmeter\\flask.jtl'
            			}  
            		}
            	}
		    }
	     }
    }
    
    post { 
	    always { 
		node ('funcional') {
		     echo 'Borrar WORKSPACE agent-funcional!'
		     cleanWs()
	        }
		node ('no-funcional') {
		     echo 'Borrar WORKSPACE agent-no-funcional!'
		     cleanWs()
	        }
	    }
	}
}
